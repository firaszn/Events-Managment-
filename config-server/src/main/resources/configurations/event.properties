spring.application.name=EVENT

# Port du service
server.port=8082

# Configuration Eureka
eureka.instance.hostname=localhost
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.appname=${spring.application.name}

# Configuration PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/eventdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de connexions HikariCP
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# Configuration JPA/Hibernate pour PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Optimisations PostgreSQL
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Configuration OAuth2/JWT
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/RepasKeycloak
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/RepasKeycloak/protocol/openid-connect/certs

# JWT Configuration
jwt.secret-key=NouveauSecretPourJwtHs256QuiEstAssezLongEtComplexePourEtreSecuriseEnBase64=

# Configuration Kafka
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.acks=1
spring.kafka.producer.retries=3

# Configuration Kafka Consumer
spring.kafka.consumer.group-id=event-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true

# Topics Kafka
kafka.topics.event-created=event.created
kafka.topics.event-updated=event.updated
kafka.topics.waitlist-invitation-created=waitlist.invitation.created
kafka.topics.waitlist-redistribution=waitlist.redistribution
kafka.topics.invitation-auto-confirm=invitation.auto.confirm
kafka.topics.waitlist-clear-all=waitlist.clear.all

# Configuration Feign
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.client.config.default.loggerLevel=full
feign.hystrix.enabled=false
feign.okhttp.enabled=true

# Service URLs
invitation-service.url=http://api-gateway:8093
api-gateway.url=http://api-gateway:8093

# Logging pour debug
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.example.eventservice=DEBUG
logging.level.com.example.eventservice.client=DEBUG
logging.level.feign=DEBUG
logging.level.com.example.eventservice.config=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.kafka=DEBUG

# D?sactiver le v?rificateur de compatibilit? Spring Cloud
spring.cloud.compatibility-verifier.enabled=false

# Autoriser l'?crasement des beans
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=false

# Actuator & Prometheus Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.endpoints.web.base-path=/actuator
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

# Enable JVM metrics
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true

# Enable HTTP metrics
management.metrics.web.server.request.autotime.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Security for Actuator endpoints
management.endpoints.security.enabled=false
spring.security.ignored=/actuator/**

# Message de bienvenue
welcome.message=Bienvenue dans le Event Service!
