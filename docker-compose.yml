services:
  # 1. Config Server (Premier à démarrer)
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8888 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 2. Eureka Server (Deuxième)
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - microservices-network
#    environment:
#      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8761 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 3. User Service
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8084:8084"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/userdb
      - KEYCLOAK_AUTH_SERVER_URL=http://host.docker.internal:8080
      - SPRING_CONFIG_IMPORT=configserver:http://localhost:8888

    extra_hosts:
      - "host.docker.internal:host-gateway"

  # 4. Event Service
  event-service:
    build: ./event-service
    container_name: event-service
    ports:
      - "8082:8082"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5433/eventdb
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=host.docker.internal:9092
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # 5. Invitation Service
  invitation-service:
    build: ./invitation-service
    container_name: invitation-service
    ports:
      - "8083:8083"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5434/invitationdb
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=host.docker.internal:9092
      - KEYCLOAK_AUTH_SERVER_URL=http://host.docker.internal:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # 6. Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8085:8085"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=host.docker.internal:9092
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # 7. API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8093:8093"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - KEYCLOAK_AUTH_SERVER_URL=http://host.docker.internal:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  microservices-network:
    driver: bridge